// +build !ignore_autogenerated

// Code generated by operator-sdk. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Rabbitmq) DeepCopyInto(out *Rabbitmq) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Rabbitmq.
func (in *Rabbitmq) DeepCopy() *Rabbitmq {
	if in == nil {
		return nil
	}
	out := new(Rabbitmq)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Rabbitmq) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqAuth) DeepCopyInto(out *RabbitmqAuth) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqAuth.
func (in *RabbitmqAuth) DeepCopy() *RabbitmqAuth {
	if in == nil {
		return nil
	}
	out := new(RabbitmqAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqImage) DeepCopyInto(out *RabbitmqImage) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqImage.
func (in *RabbitmqImage) DeepCopy() *RabbitmqImage {
	if in == nil {
		return nil
	}
	out := new(RabbitmqImage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqList) DeepCopyInto(out *RabbitmqList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Rabbitmq, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqList.
func (in *RabbitmqList) DeepCopy() *RabbitmqList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPolicy) DeepCopyInto(out *RabbitmqPolicy) {
	*out = *in
	out.Definition = in.Definition
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPolicy.
func (in *RabbitmqPolicy) DeepCopy() *RabbitmqPolicy {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPolicyDefinition) DeepCopyInto(out *RabbitmqPolicyDefinition) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPolicyDefinition.
func (in *RabbitmqPolicyDefinition) DeepCopy() *RabbitmqPolicyDefinition {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPolicyDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqSSL) DeepCopyInto(out *RabbitmqSSL) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqSSL.
func (in *RabbitmqSSL) DeepCopy() *RabbitmqSSL {
	if in == nil {
		return nil
	}
	out := new(RabbitmqSSL)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqSpec) DeepCopyInto(out *RabbitmqSpec) {
	*out = *in
	in.RabbitmqPdb.DeepCopyInto(&out.RabbitmqPdb)
	out.RabbitmqSSL = in.RabbitmqSSL
	in.RabbitmqAuth.DeepCopyInto(&out.RabbitmqAuth)
	if in.RabbitmqStorageClass != nil {
		in, out := &in.RabbitmqStorageClass, &out.RabbitmqStorageClass
		*out = new(string)
		**out = **in
	}
	if in.RabbitmqPolicies != nil {
		in, out := &in.RabbitmqPolicies, &out.RabbitmqPolicies
		*out = make([]RabbitmqPolicy, len(*in))
		copy(*out, *in)
	}
	if in.RabbitmqPlugins != nil {
		in, out := &in.RabbitmqPlugins, &out.RabbitmqPlugins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.K8SENV != nil {
		in, out := &in.K8SENV, &out.K8SENV
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.K8SImage = in.K8SImage
	if in.K8SLabels != nil {
		in, out := &in.K8SLabels, &out.K8SLabels
		*out = make([]metav1.LabelSelector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.RabbitmqVolumeSize = in.RabbitmqVolumeSize.DeepCopy()
	if in.RabbitmqPodRequests != nil {
		in, out := &in.RabbitmqPodRequests, &out.RabbitmqPodRequests
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.RabbitmqPodLimits != nil {
		in, out := &in.RabbitmqPodLimits, &out.RabbitmqPodLimits
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.RabbitmqAffinity != nil {
		in, out := &in.RabbitmqAffinity, &out.RabbitmqAffinity
		*out = new(corev1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqSpec.
func (in *RabbitmqSpec) DeepCopy() *RabbitmqSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqStatus) DeepCopyInto(out *RabbitmqStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqStatus.
func (in *RabbitmqStatus) DeepCopy() *RabbitmqStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqStatus)
	in.DeepCopyInto(out)
	return out
}
